<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="FileRuleResults.php" path="/Rule">
    <totals>
      <lines total="44" comments="3" code="41" executable="13" executed="13" percent="100.00"/>
      <methods count="5" tested="5" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Rule\FileRuleResults" start="8" executable="13" executed="13" crap="5">
      <namespace name="App\Rule"/>
      <method name="__construct" signature="__construct(string $path, array $ruleResults)" start="11" end="13" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="create" signature="create(string $path, array $ruleResults): self" start="16" end="19" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getPath" signature="getPath(): string" start="21" end="24" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getViolations" signature="getViolations(): array" start="27" end="35" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="toString" signature="toString(): string" start="37" end="44" crap="1" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="11">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetPath"/>
      </line>
      <line nr="13">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetPath"/>
      </line>
      <line nr="18">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetPath"/>
      </line>
      <line nr="23">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetPath"/>
      </line>
      <line nr="29">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
      </line>
      <line nr="30">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
      </line>
      <line nr="31">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
      </line>
      <line nr="32">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
      </line>
      <line nr="33">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testGetViolations"/>
      </line>
      <line nr="39">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
      </line>
      <line nr="40">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
      </line>
      <line nr="41">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
      </line>
      <line nr="42">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
      </line>
      <line nr="45">
        <covered by="App\Tests\Unit\Rule\FileRuleResultsTest::testToString"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Rule</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Rule\RuleResult\RuleResult</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Rule\RuleResult\Violation</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FileRuleResults</token>
      </line>
      <line no="9">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @param RuleResult[] $ruleResults */</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ruleResults</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @param RuleResult[] $ruleResults */</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ruleResults</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ruleResults</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">path</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @return Violation[] */</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getViolations</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">ruleResults</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FN">fn</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">RuleResult</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rr</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Violation</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Safe\sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"%s:\n\t%s"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">path</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">join</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n\t"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FN">fn</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">RuleResult</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rr</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getViolations</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
